name: Distribute APK to Firebase

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: "Test scenario tags"
        required: false
        type: boolean

jobs:
  distribute-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Encode Keystore to Base64
        run: |
          base64 -w 0 $GITHUB_WORKSPACE/pdp-ci-cd-release-key.jks > keystore.b64
          echo "::set-output name=keystore_base64::$(cat keystore.b64)"

      - name: Save Keystore as GitHub Secret
        run: |
          echo "${{ steps.encode_keystore.outputs.keystore_base64 }}" > $GITHUB_WORKSPACE/keystore.b64
        id: encode_keystore

      - name: Decode Keystore from Base64
        run: |
          echo "$KESTORE_FILE" | base64 -d > $GITHUB_WORKSPACE/pdp-ci-cd-release-key.jks
        env:
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}

      # - name: Set up Flutter
      #   uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: "3.24.3"

      # - name: Verify Flutter Installation
      #   run: flutter doctor -v

      # - name: Install dependencies
      #   run: flutter pub get

      # - name: Bump Version in pubspec.yaml
      #   id: bump-version
      #   run: |
      #     CURRENT_VERSION=$(grep '^version: ' pubspec.yaml | awk '{print $2}')
      #     VERSION_NAME=$(echo $CURRENT_VERSION | cut -d'+' -f1)
      #     VERSION_CODE=$(echo $CURRENT_VERSION | cut -d'+' -f2)
      #     NEW_VERSION_CODE=$((VERSION_CODE + 1))
      #     NEW_VERSION_NAME="$VERSION_NAME"
      #     sed -i "s/^version: .*/version: $NEW_VERSION_NAME+$NEW_VERSION_CODE/" pubspec.yaml
      #     echo "Updated version to $NEW_VERSION_NAME+$NEW_VERSION_CODE"
      #     echo "version=$NEW_VERSION_NAME+$NEW_VERSION_CODE" >> $GITHUB_OUTPUT

      # - name: Build APK
      #   run: flutter build apk --debug

      # - name: Upload Artifact to Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: ${{ secrets.APPID }}
      #     # token: ${{ secrets.FIREBASE_TOKEN }}
      #     serviceCredentialsFileContent: ${{secrets.CREDENTIAL_FILE_CONTENT}}
      #     groups: my_team
      #     file: build/app/outputs/flutter-apk/app-debug.apk
      #     releaseNotes: "Release for branch ${{ github.ref }}\nVersion: ${{ steps.bump-version.outputs.version }}"

      # - name: Install Firebase CLI
      #   run: npm install -g firebase-tools

      # - name: Distribute APK
      #   env:
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      #   run: |
      #     firebase appdistribution:distribute build/app/outputs/flutter-apk/app-debug.apk \
      #     --app 1:981212150058:android:d7a644e30d78b0982ac653 \
      #     --release-notes "test_build" \
      #     --groups my_team
