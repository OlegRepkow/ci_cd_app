name: Distribute APK to Firebase

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  distribute-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode Keystore from Base64
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > android/app/${{ secrets.KESTORE_FILE_PATH }}

      - name: Create keystore
        run: |
          echo "keyAliasRelease=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "keyPasswordRelease=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "storeFileRelease=${{ secrets.KESTORE_FILE_PATH }}" >> android/key.properties
          echo "storePasswordRelease=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
        # cat android/key.properties

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"

      - name: Verify Flutter Installation
        run: flutter doctor -v

      - name: Install dependencies
        run: flutter pub get

      - name: Bump Version in pubspec.yaml
        id: bump-version
        run: |
          CURRENT_VERSION=$(grep '^version: ' pubspec.yaml | awk '{print $2}')
          VERSION_NAME=$(echo $CURRENT_VERSION | cut -d'+' -f1)
          VERSION_CODE=$(echo $CURRENT_VERSION | cut -d'+' -f2)
          NEW_VERSION_CODE=$((VERSION_CODE + 1))
          NEW_VERSION_NAME="$VERSION_NAME"
          sed -i "s/^version: .*/version: $NEW_VERSION_NAME+$NEW_VERSION_CODE/" pubspec.yaml
          echo "Updated version to $NEW_VERSION_NAME+$NEW_VERSION_CODE"
          echo "version=$NEW_VERSION_NAME+$NEW_VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Build APK
        run: flutter build apk --release

      - name: Upload Artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.APPID }}
          # token: ${{ secrets.FIREBASE_TOKEN }}
          serviceCredentialsFileContent: ${{secrets.CREDENTIAL_FILE_CONTENT}}
          groups: my_team
          file: build/app/outputs/flutter-apk/app-release.apk
          releaseNotes: "Release for branch ${{ github.ref }}\nVersion: ${{ steps.bump-version.outputs.version }}"

      # - name: Install Firebase CLI
      #   run: npm install -g firebase-tools

      # - name: Distribute APK
      #   env:
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      #   run: |
      #     firebase appdistribution:distribute build/app/outputs/flutter-apk/app-debug.apk \
      #     --app 1:981212150058:android:d7a644e30d78b0982ac653 \
      #     --release-notes "test_build" \
      #     --groups my_team
